{"ast":null,"code":"var _jsxFileName = \"D:\\\\Elevado\\\\Sms_sender\\\\sendsms\\\\src\\\\components\\\\EmailForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailForm() {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [otp, setOtp] = useState('');\n  const [verificationMessage, setVerificationMessage] = useState('');\n  const handleSendOTP = async e => {\n    e.preventDefault();\n    try {\n      // Send a POST request to your backend to send SMS with OTP\n      const response = await axios.post('http://localhost:3000/send-welcome-sms', {\n        phoneNumber\n      });\n      console.log('OTP sent successfully!');\n      // Optionally, show a success message to the user\n      setVerificationMessage('OTP sent to your phone number. Please check and enter the OTP below.');\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      // Optionally, show an error message to the user\n      setVerificationMessage('Error sending OTP. Please try again later.');\n    }\n  };\n  const handleVerifyOTP = async e => {\n    e.preventDefault();\n    try {\n      // Send a POST request to your backend to verify the OTP\n      await axios.post('http://localhost:3000/verify-otp', {\n        phoneNumber,\n        otp\n      });\n      console.log('OTP verified successfully!');\n      // Optionally, show a success message to the user\n      setVerificationMessage('OTP verified successfully!');\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      // Optionally, show an error message to the user\n      setVerificationMessage('Error verifying OTP. Please try again.');\n    }\n  };\n  const handleChangePhoneNumber = e => {\n    setPhoneNumber(e.target.value);\n  };\n  const handleChangeOtp = e => {\n    setOtp(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscribe to our Newsletter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendOTP,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"Enter your phone number\",\n        value: phoneNumber,\n        onChange: handleChangePhoneNumber,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), verificationMessage && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVerifyOTP,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: handleChangeOtp,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), verificationMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: verificationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailForm, \"uVLUpydSP3xuYKEB0R6zXyTCQYI=\");\n_c = EmailForm;\nexport default EmailForm;\nvar _c;\n$RefreshReg$(_c, \"EmailForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","EmailForm","_s","phoneNumber","setPhoneNumber","otp","setOtp","verificationMessage","setVerificationMessage","handleSendOTP","e","preventDefault","response","post","console","log","error","handleVerifyOTP","handleChangePhoneNumber","target","value","handleChangeOtp","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["D:/Elevado/Sms_sender/sendsms/src/components/EmailForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction EmailForm() {\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [verificationMessage, setVerificationMessage] = useState('');\r\n\r\n  const handleSendOTP = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Send a POST request to your backend to send SMS with OTP\r\n      const response = await axios.post('http://localhost:3000/send-welcome-sms', { phoneNumber });\r\n      console.log('OTP sent successfully!');\r\n      // Optionally, show a success message to the user\r\n      setVerificationMessage('OTP sent to your phone number. Please check and enter the OTP below.');\r\n    } catch (error) {\r\n      console.error('Error sending OTP:', error);\r\n      // Optionally, show an error message to the user\r\n      setVerificationMessage('Error sending OTP. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Send a POST request to your backend to verify the OTP\r\n      await axios.post('http://localhost:3000/verify-otp', { phoneNumber, otp });\r\n      console.log('OTP verified successfully!');\r\n      // Optionally, show a success message to the user\r\n      setVerificationMessage('OTP verified successfully!');\r\n    } catch (error) {\r\n      console.error('Error verifying OTP:', error);\r\n      // Optionally, show an error message to the user\r\n      setVerificationMessage('Error verifying OTP. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleChangePhoneNumber = (e) => {\r\n    setPhoneNumber(e.target.value);\r\n  };\r\n\r\n  const handleChangeOtp = (e) => {\r\n    setOtp(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Subscribe to our Newsletter</h2>\r\n      <form onSubmit={handleSendOTP}>\r\n        <input\r\n          type=\"tel\"\r\n          placeholder=\"Enter your phone number\"\r\n          value={phoneNumber}\r\n          onChange={handleChangePhoneNumber}\r\n          required\r\n        />\r\n        <button type=\"submit\">Send OTP</button>\r\n      </form>\r\n\r\n      <br/>\r\n\r\n      {verificationMessage && (\r\n        <form onSubmit={handleVerifyOTP}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={handleChangeOtp}\r\n            required\r\n          />\r\n          <button type=\"submit\">Verify OTP</button>\r\n        </form>\r\n      )}\r\n      {verificationMessage && <p>{verificationMessage}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}